server.port = 8080

 spring.datasource.url=jdbc:mysql://localhost:3306/rentals?serverTimezone=UTC
 spring.datasource.username=root
 spring.datasource.password =0087
 spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

 # Hibernate ddl auto (create, create-drop, validate, update)
 spring.jpa.hibernate.ddl-auto = update
 spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# server.port=8080
#spring.datasource.platform=postgres
#spring.datasource.url=postgres://rtkzggamizgowu:18c24dd748e308f73d5a3b367f73909ffb7b3f7f89976e9095c2415b45a66b0d@ec2-3-230-106-126.compute-1.amazonaws.com:5432/d4lg8c0glvs4fb
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.hikari.connectionTimeout=20000
#spring.datasource.hikari.maximumPoolSize=5
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#
#spring.datasource.driverClassName=org.postgresql.Driver

spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

management.endpoints.web.exposure.include=*